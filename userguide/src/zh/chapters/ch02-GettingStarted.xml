<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter>
  <title>开始学习</title>

  <section id="demo.setup.one.minute.version">
    <title>一分钟入门</title>
    <para>
	  从<ulink url="http://www.activiti.org">Activiti网站</ulink>下载Activiti Explorer的WAR文件后，
	  可以按照下列步骤以默认配置运行样例。
	  你需要一个<ulink url="http://java.sun.com/javase/downloads/index.jsp">Java 运行环境</ulink>和
	  <ulink url="http://tomcat.apache.org/download-70.cgi">Apache Tomcat</ulink>
	  （其实，任何提供了servlet功能的web容器都可以正常运行。但是我们主要是使用tomcat进行的测试）。
      <itemizedlist>
        <listitem>
          <para>把下载的activiti-explorer.war复制到Tomcat的webapps目录下。</para>
        </listitem>
        <listitem>
          <para>执行Tomcat的bin目录下的startup.bat或startup.sh启动服务器。</para>
        </listitem>
        <listitem>
          <para>
		    Tomcat启动后，打开浏览器访问<ulink url="http://localhost:8080/activiti-explorer">http://localhost:8080/activiti-explorer</ulink>。
			使用kermit/kermit登录。
          </para>
        </listitem>
      </itemizedlist>
	  这样就好了！Activiti Explorer默认使用H2内存数据库，如果你想使用其他数据库
	  请参考<link linkend="activiti.setup">这里</link>。
    </para>
  </section>

  <section id="activiti.setup">
    <title>安装Activiti</title>
    <para>要安装Activiti你需要一个
    <ulink url="http://java.sun.com/javase/downloads/index.jsp">Java运行环境</ulink> 和
    <ulink url="http://tomcat.apache.org/download-70.cgi">Apache Tomcat</ulink>。
    还要确认设置好<emphasis>JAVA_HOME</emphasis>系统变量。
	不同的操作系统下的设置方法是不同的。
    </para>
    <para>要运行Activiti Explorer和REST web应用，你要从Activiti的下载页下载WAR文件，
	复制到Tomcat安装目录下<literal>webapps</literal>目录下。
	默认Explorer应用使用的内存数据库已经包含了示例流程，用户和群组信息。
    </para>
    <para>下面是示例中可以使用的用户：</para>
    <table>
      <title>示例用户</title>
      <tgroup cols='3'>
        <thead>
          <row>
            <entry>账号</entry>
            <entry>密码</entry>
            <entry>角色</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>kermit</entry>
            <entry>kermit</entry>
            <entry>admin</entry>
          </row>
          <row>
            <entry>gonzo</entry>
            <entry>gonzo</entry>
            <entry>manager</entry>
          </row>
          <row>
            <entry>fozzie</entry>
            <entry>fozzie</entry>
            <entry>user</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>现在，你可以访问下列web应用：</para>
    <table>
      <title>webapp工具</title>
      <tgroup cols='4'>
        <thead>
          <row>
            <entry>Webapp名称</entry>
            <entry>URL</entry>
            <entry>描述</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>Activiti Explorer</entry>
            <entry><ulink url="http://localhost:8080/activiti-explorer">http://localhost:8080/activiti-explorer</ulink> </entry>
            <entry>流程引擎的用户控制台。使用它来启动新流程，分配任务，
			查看并认领任务，等等。这个工具也可以用来管理Activiti引擎。
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
	  注意Activiti Explorer演示实例只是一种简单快速展示Activiti的功能的方式。
	  但是并不是说只能使用这种方式使用Activiti。
	  Activiti只是一个jar，
	  可以内嵌到任何Java环境中：swing或者Tomcat, JBoss, WebSphere等等。
	  也可以把Activiti作为一个典型的单独运行的BPM服务器运行。
	  只要java可以做的，Activiti也可以。
    </para>
  </section>

  <section id="activiti.setup.database">
    <title>安装Activiti数据库</title>
    <para>就像在一分钟入门里说过的，Activiti Explorer默认使用H2内存数据库。
	要让Activiti使用独立运行的H2数据库或者其他数据库，
	可以修改Activiti Explorer web应用WEB-INF/classes目录下的db.properties。
    </para>
    <para>另外，注意Activiti Explorer自动生成了演示用的默认用户和群组，流程定义，数据模型。
	要想禁用这个功能，要修改WEB-INF目录下的activiti-standalone-context.xml。
	可以使用下面的<literal>demoDataGenerator</literal> bean定义代码完全禁用安装默认数据。从代码中也可以看出，我们可以单独启用或禁用每一项功能。
    </para>
    <programlisting>
      &lt;bean id="demoDataGenerator" class="org.activiti.explorer.demo.DemoDataGenerator">
        &lt;property name="processEngine" ref="processEngine" />
        &lt;property name="createDemoUsersAndGroups" value="false" />
        &lt;property name="createDemoProcessDefinitions" value="false" />
        &lt;property name="createDemoModels" value="false" />
      &lt;/bean>
    </programlisting>
  </section>

  <section id="getting.started.including.libs">

    <title>引入Activiti jar和依赖</title>

    <para>
	    为了引用Activiti jar和依赖，我们推荐使用
		<ulink url="http://maven.apache.org/">Maven</ulink>（或<ulink url="http://ant.apache.org/ivy/">Ivy</ulink>），
		它简化了我们之间的依赖管理。
		参考<ulink url="http://www.activiti.org/community.html#maven.repository"></ulink>
		来为你的项目引入必须的jar包。
    </para>

    <para>
	    如果不想用Maven，你也可以自己把这些jar引入到你的项目中。
		Activiti下载zip包包含了一个<literal>libs</literal>目录，
		包含了所有Activiti的jar包（和源代码jar包）。依赖没有用这种方式发布。
		Activiti引擎必须的依赖如下所示（通过<literal>mvn dependency:tree</literal>生成）：
       <programlisting>
org.activiti:activiti-engine:jar:5.12.1
+- org.apache.commons:commons-email:jar:1.2:compile
|  +- javax.mail:mail:jar:1.4.1:compile
|  \- javax.activation:activation:jar:1.1:compile
+- commons-lang:commons-lang:jar:2.4:compile
+- org.mybatis:mybatis:jar:3.1.1:compile
+- org.springframework:spring-beans:jar:3.1.2.RELEASE:compile
|  \- org.springframework:spring-core:jar:3.1.2.RELEASE:compile
|     +- org.springframework:spring-asm:jar:3.1.2.RELEASE:compile
|     \- commons-logging:commons-logging:jar:1.1.1:compile
\- joda-time:joda-time:jar:2.1:compile
       </programlisting>
       注意：只有使用了<link linkend="bpmnEmailTask">mail service task</link>才必须引入mail依赖jar。
    </para>

    <para>
	    所有依赖可以在<ulink url="https://github.com/Activiti/Activiti">Activiti 源码</ulink>的模块中，
		通过<literal>mvn dependency:copy-dependencies</literal>下载。
    </para>

  </section>

  <section id="getting.started.next.steps">
    <title>下一步</title>
    <para>
	    使用<link linkend="activitiExplorer">Activiti Explorer</link> web应用
		是一个熟悉Activiti概念和功能的好办法。但是，
		Activiti的主要目标是为你自己的应用添加强大的BPM和工作流功能。
		下面的章节会帮助你熟悉
		如何在你的环境中使用Activiti进行编程：
        <itemizedlist>
            <listitem>
                <para>
                    <link linkend="configuration">配置章节</link> 会教你如何设置Activiti，
					如何获得<literal>ProcessEngine</literal>类的实例，
					它是所有Activiti引擎功能的中心入口。
                </para>
            </listitem>
            <listitem>
                <para>
					<link linkend="chapterApi">API章节</link>会带领你了解建立Activiti API的服务。
					这些服务用简便的方法提供了Activiti引擎的强大功能，
					它们可以使用在任何Java环境下。

                </para>
            </listitem>
            <listitem>
                <para>
					对深入了解BPMN 2.0，Activiti引擎中流程的编写结构感兴趣吗？
					请继续浏览<link linkend="bpmn20">BPMN 2.0 章节</link>。
                </para>
            </listitem>
        </itemizedlist>
    </para>
  </section>

</chapter>
